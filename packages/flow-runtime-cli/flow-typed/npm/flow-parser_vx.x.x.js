// flow-typed signature: 9a95461512f1a425dac36b5b3b73c378
// flow-typed version: <<STUB>>/flow-parser_v^0.38.0/flow_v0.38.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'flow-parser'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the 
 * community by sending a pull request to: 
 * https://github.com/flowtype/flow-typed
 */

declare module 'flow-parser' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'flow-parser/flow_parser' {
  declare module.exports: any;
}

declare module 'flow-parser/test/custom_ast_types' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima_ast_types' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima_test_runner' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima_tests' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0007' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0008' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0009' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0010' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0011' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0012' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0013' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0014' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0015' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0007' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0008' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0009' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0010' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0011' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0012' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0013' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0014' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0015' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0016' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0017' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0018' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0019' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0020' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0021' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0022' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0023' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0024' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0025' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0026' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0027' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0028' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0029' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0030' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0031' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0032' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0033' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0034' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0035' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0036' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0037' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0038' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0039' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0040' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0041' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0042' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0043' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0044' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0045' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0046' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0047' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0048' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0049' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0050' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0051' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0052' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0053' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0054' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/comment/migrated_0055' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/const/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/const/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/const/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/function/dupe-param' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/function/empty-param' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/function/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/function/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/function/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/function/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/function/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/function/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/function/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/function/migrated_0007' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/function/migrated_0008' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/function/migrated_0009' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/function/migrated_0010' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/function/migrated_0011' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/function/migrated_0012' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/function/migrated_0013' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/function/migrated_0014' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/let/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/let/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/let/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/declaration/let/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/directive-prolog/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/directive-prolog/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/exp_assign' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/exp_bitnot' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/exp_delete' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/exp_minus' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/exp_minusminus' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/exp_not' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/exp_operator' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/exp_plus' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/exp_plusplus' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/exp_precedence' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/exp_typeof' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/exp_void' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/invalid_bitnot_exp' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/invalid_delete_exp' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/invalid_minus_exp' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/invalid_not_exp' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/invalid_plus_exp' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/invalid_typeof_exp' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/invalid_update' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/invalid_void_exp' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/exponent/update_exp' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES2016/identifier/gujarati_zha' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/array-binding-pattern-01' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/array-binding-pattern-02' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/array-binding-pattern-03' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/array-binding-pattern-empty' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/elision' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/invalid-dup-param' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/invalid-elision-after-rest' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/arrow-rest-forgetting-comma' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/arrow-with-multiple-arg-and-rest' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/arrow-with-multiple-rest' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/arrow-with-only-rest' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/complex-rest-in-arrow-not-allowed' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/invalid-duplicated-params' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/invalid-line-terminator-arrow' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/invalid-param-strict-mode' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0007' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0008' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0009' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0010' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0011' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0012' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0013' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0014' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0015' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0016' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0017' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0018' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0019' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0020' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/non-arrow-param-followed-by-arrow' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/non-arrow-param-followed-by-rest' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/invalid-member-expr' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/invalid-method-in-pattern' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/invalid-nested-param' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/invalid-pattern-without-parenthesis' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/invalid-rest-in-object-pattern' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/nested-cover-grammar' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/object-binding-pattern-01' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/object-binding-pattern-empty' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/param-with-rest-without-arrow' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/arrow-function/rest-without-arrow' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binary-integer-literal/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binary-integer-literal/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binary-integer-literal/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binary-integer-literal/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binary-integer-literal/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binary-integer-literal/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/dupe-param' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/elision' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/empty-pattern-catch-param' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/empty-pattern-fn' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/empty-pattern-lexical' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/empty-pattern-var' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/for-let-let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/hole' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/invalid-strict-for-let-let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/nested-pattern' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/patterned-catch-dupe' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/patterned-catch' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/rest.elision' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/rest' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/tailing-hold' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/var_let_array' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/var-for-in' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/with-default-catch-param-fail' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/with-default-catch-param' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/with-default-fn' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/with-object-pattern' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/elision' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/empty-catch-param' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/empty-fn' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/empty-for-lex' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/empty-lexical' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/empty-var' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/for-let-let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/invalid-strict-for-let-let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/nested' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/properties' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/var-for-in' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0007' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0008' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0009' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0010' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0011' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0012' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0013' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0014' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0015' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0016' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0017' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0018' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0019' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0020' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0021' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0022' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0023' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0024' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0025' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/class/migrated_0026' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/default-parameter-value/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/default-parameter-value/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/default-parameter-value/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/array-pattern/dup-assignment' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/array-pattern/elision' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/array-pattern/member-expr-in-rest' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/array-pattern/nested-assignment' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/array-pattern/nested-cover-grammar' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/array-pattern/simple-assignment' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/invalid-cover-grammar' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/invalid-group-assignment' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/object-pattern/empty-object-pattern-assignment' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/object-pattern/invalid-lhs-01' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/object-pattern/invalid-lhs-02' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/object-pattern/invalid-pattern-with-method' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/object-pattern/nested-cover-grammar' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/object-pattern/object-pattern-assignment' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-const-number' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-default-array' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-default-class' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-default-expression' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-default-function' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-default-named-function' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-default-number' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-default-object' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-default-value' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-from-batch' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-from-default' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-from-named-as-default' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-from-named-as-specifier' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-from-named-as-specifiers' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-from-specifier' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-from-specifiers' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-function-declaration' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-function' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-let-number' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-named-as-default' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-named-as-specifier' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-named-as-specifiers' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-named-empty' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-named-specifier' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-named-specifiers-comma' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-named-specifiers' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-var-anonymous-function' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-var-number' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/export-var' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/invalid-export-batch-missing-from-clause' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/invalid-export-batch-token' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/invalid-export-default-equal' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/invalid-export-default-token' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/invalid-export-default' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/export-declaration/invalid-export-named-default' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/for-of-array-pattern-let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/for-of-array-pattern-var' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/for-of-array-pattern' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/for-of-let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/for-of-object-pattern-const' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/for-of-object-pattern-var' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/for-of-object-pattern' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/for-of-with-const' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/for-of-with-let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/for-of-with-var' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/for-of' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/invalid_const_let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/invalid_let_let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/invalid-const-init' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/invalid-for-of-array-pattern' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/invalid-for-of-object-pattern' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/invalid-let-init' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/invalid-lhs-init' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/invalid-strict-for-of-let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/invalid-var-init' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/let-of-of' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/for-of/unexpected-number' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-declaration-with-params' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-declaration-with-yield-delegate' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-declaration-with-yield' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-declaration' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-expression-rest-param' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-expression-with-params' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-expression-with-yield-delegate' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-expression-with-yield' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-expression' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-method-with-computed-name' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-method-with-invalid-computed-name' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-method-with-params' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-method-with-yield-delegate' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-method-with-yield-expression' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-method-with-yield-line-terminator' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-method-with-yield' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-method' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-parameter-binding-element' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-parameter-binding-property-reserved' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-parameter-binding-property' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-parameter-computed-property-name' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-parameter-invalid-binding-element' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-parameter-invalid-binding-property' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/generator-parameter-invalid-computed-property-name' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/incomplete-yield-delegate' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/malformed-generator-method-2' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/malformed-generator-method' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/static-generator-method-with-computed-name' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/generator/static-generator-method' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/dakuten_handakuten' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/escaped_all' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/escaped_math_alef' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/escaped_math_dal_part' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/escaped_math_kaf_lam' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/escaped_math_zain_start' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/escaped_part' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/escaped_start' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/estimated' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/ethiopic_digits' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/invalid_escaped_surrogate_pairs' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/invalid_expression_await' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/invalid_function_wait' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/invalid_id_smp' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/invalid_lone_surrogate.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/invalid_var_await' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/math_alef' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/math_dal_part' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/math_kaf_lam' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/math_zain_start' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/module_await' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/valid_await' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/weierstrass_weierstrass' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/identifier/weierstrass' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/import-default-and-named-specifiers' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/import-default-and-namespace-specifiers' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/import-default-as' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/import-default' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/import-jquery' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/import-module' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/import-named-as-specifier' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/import-named-as-specifiers' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/import-named-empty' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/import-named-specifier' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/import-named-specifiers-comma' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/import-named-specifiers' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/import-namespace-specifier' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/import-null-as-nil' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-default-after-named-after-default' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-default-after-named' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-default-missing-module-specifier' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-default-module-specifier' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-default' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-missing-comma' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-missing-module-specifier' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-module-specifier' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-named-after-named' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-named-after-namespace' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-named-as-missing-from' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-namespace-after-named' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-namespace-missing-as' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-specifiers' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/for_let_in' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_complex_binding_without_init' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_const_const' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_const_forin' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_const_let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_for_const_declarations' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_for_const_let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_for_let_declarations' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_for_let_init' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_for_let_let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_for_let_pattern' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_forin_const_let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_forin_let_let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_let_declarations' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_let_for_in' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_let_forin' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_let_init' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_let_let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_strict_const_const' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_strict_const_let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_1' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_2' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_3' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_4' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_5' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_6' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_7' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/let_assign' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/let_identifier' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/let_member' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/lexical-declaration/module_let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/meta-property/assign-new-target' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/meta-property/invalid-dots' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/meta-property/invalid-new-target' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/meta-property/new-new-target' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/meta-property/new-target-declaration' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/meta-property/new-target-expression' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/meta-property/new-target-invoke' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/meta-property/new-target-precedence' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/meta-property/unknown-property' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/method-definition/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/method-definition/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/method-definition/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/method-definition/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/method-definition/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-getter-literal-identifier' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-identifier-literal' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-identifier-shorthand' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-identifiers' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-literal-identifier' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-literal-shorthand' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-literals' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-setter-literal-identifier' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-shorthand-identifier' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-shorthand-literal' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-shorthands' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/object-initialiser/proto-identifier-getter-setter' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/object-initialiser/proto-identifier-getter' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/object-initialiser/proto-identifier-method' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/object-initialiser/proto-identifier-setter' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/object-initialiser/proto-literal-getter-setter' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/object-initialiser/proto-literal-getter' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/object-initialiser/proto-literal-method' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/object-initialiser/proto-literal-setter' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/object-literal-property-value-shorthand/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/rest-parameter/function-declaration' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/rest-parameter/function-expression' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/rest-parameter/object-method' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/rest-parameter/object-shorthand-method' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/spread-element/call-multi-spread' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/spread-element/call-spread-default' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/spread-element/call-spread-first' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/spread-element/call-spread-number' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/spread-element/call-spread' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/spread-element/invalid-call-dot-dot' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/spread-element/invalid-call-dots' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/spread-element/invalid-call-spreads' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/spread-element/invalid-new-dot-dot' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/spread-element/invalid-new-dots' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/spread-element/invalid-new-spreads' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/spread-element/new-multi-spread' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/spread-element/new-spread-default' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/spread-element/new-spread-first' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/spread-element/new-spread-number' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/spread-element/new-spread' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/super-property/arrow_super' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/super-property/constructor_super' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/super-property/invalid_super_access' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/super-property/invalid_super_id' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/super-property/invalid_super_not_inside_function' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/super-property/new_super' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/super-property/super_computed' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/super-property/super_member' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/template-literals/after-switch' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/template-literals/dollar-sign' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/template-literals/escape-sequences.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/template-literals/invalid-escape' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/template-literals/line-terminators.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/template-literals/literal-escape-sequences.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/template-literals/new-expression' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/template-literals/octal-literal' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/template-literals/strict-octal-literal' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/template-literals/tagged-interpolation' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/template-literals/tagged-nested-with-object-literal' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/template-literals/tagged' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/template-literals/unclosed-interpolation' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/template-literals/unclosed-nested' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/template-literals/unclosed' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/template-literals/untagged' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/unicode-code-point-escape-sequence/migrated_0000.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/unicode-code-point-escape-sequence/migrated_0001.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/unicode-code-point-escape-sequence/migrated_0002.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-binding-property' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-expression' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-arrow-default' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-arrow-parameter' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-arrow-parameters' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-catch' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-declaration' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-export-default' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-expression-name' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-expression-parameter' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-expression-rest' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-function-declaration' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-lexical-declaration' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-member-expression' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-parameter' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-rest' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-strict-function-expression' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-strict-function-parameter' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-variable-declaration' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-array-pattern' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-arrow-parameter-default' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-arrow-parameter-name' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-binding-element' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-catch-parameter' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-formal-parameter' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-function-declaration' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-function-expression' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-identifier' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-lexical-declaration' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-rest-parameter' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-variable-declaration' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-array-pattern' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-arrow-concise-body' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-arrow-function-body' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-arrow-parameter-default' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-arrow-parameter-name' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-binding-element' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-binding-property' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-call-expression-property' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-catch-parameter' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-expression-precedence' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-function-declaration-formal-parameter' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-function-declaration' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-function-expression-parameter' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-function-expression' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-generator-arrow-concise-body' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-generator-arrow-default' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-generator-arrow-function-body' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-generator-declaration' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-generator-default-parameter' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-generator-function-expression' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-generator-function-parameter' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-generator-method' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-generator-parameter-object-pattern' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-lexical-declaration' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-member-expression-property' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-method' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-parameter-object-pattern' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-rest-parameter' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-strict-binding-property' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-strict-method' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-super-property' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-variable-declaration' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-yield-expression-delegate' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/ES6/yield/yield-yield-expression' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/additive/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/additive/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/additive/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/assignment/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/assignment/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/assignment/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/assignment/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/assignment/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/assignment/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/assignment/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/assignment/migrated_0007' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/assignment/migrated_0008' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/assignment/migrated_0009' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/assignment/migrated_0010' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/assignment/migrated_0011' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/assignment/migrated_0012' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/assignment/migrated_0013' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary-bitwise/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary-bitwise/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary-bitwise/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary-logical/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary-logical/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary-logical/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary-logical/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary-logical/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary-logical/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary/migrated_0007' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary/migrated_0008' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary/migrated_0009' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary/migrated_0010' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary/migrated_0011' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary/migrated_0012' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary/migrated_0013' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary/migrated_0014' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary/migrated_0015' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary/migrated_0016' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/binary/migrated_0017' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/bitwise-shift/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/bitwise-shift/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/bitwise-shift/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/complex/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/conditional/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/conditional/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/conditional/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/equality/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/equality/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/equality/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/equality/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/grouping/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/grouping/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/let_object_computed' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0007' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0008' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0009' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0010' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0011' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0012' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0013' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0014' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0015' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0016' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0017' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0018' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0019' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0020' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0021' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0022' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/multiplicative/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/multiplicative/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/multiplicative/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/postfix/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/postfix/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/postfix/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/postfix/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/postfix/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/postfix/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0007' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0008.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0009.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0010.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0011.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0012.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0007' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0008' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0009' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0010' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0011' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0012' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0013' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0014' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0015' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0016' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0017' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0018' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0019' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0020' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0021' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0022' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0023' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0024' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0005.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0006.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0007' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0008' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0009' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0010' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0011' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0012' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0013' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/u-flag-invalid-range-4-hex' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/u-flag-invalid-range-var-hex' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/u-flag-surrogate-pair' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/u-flag-valid-range' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0002.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0007' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0008' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0009' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0010' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0011' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0012' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0013' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0015' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0016' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0017' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0018' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0007' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0008' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0009' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0010' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0011' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0012' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0013' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0014' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0015' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0016' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0017' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0018' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0019' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0020' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0021' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0022' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0023' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0024' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0025' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0026' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0027' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0028' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0029' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0030' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0031' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0032' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0033' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0034' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0035' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0036' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0037' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0038' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/other/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/other/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/other/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/primary/other/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/relational/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/relational/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/relational/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/relational/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/relational/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/relational/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/relational/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/unary/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/unary/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/unary/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/unary/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/unary/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/unary/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/unary/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/unary/migrated_0007' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/unary/migrated_0008' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/unary/migrated_0009' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/unary/migrated_0010' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/unary/migrated_0011' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/expression/unary/migrated_0012' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/GH-1106-00' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/GH-1106-01' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/GH-1106-02' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/GH-1106-03' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/GH-1106-04' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/GH-1106-05' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/GH-1106-06' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/GH-1106-07' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/GH-1106-08' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/GH-1106-09' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0007' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0008' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0009' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0010' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0011' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0012' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0013' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0014' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0015' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0016' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0017' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0018' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0019' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0020' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0021' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0022' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0023' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0024' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0025' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0026' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0027' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0028' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0029' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0030' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0031' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0032' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0033.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0034.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0035' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0036.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0037.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0038' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0039' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0040' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0041.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0042.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0043.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0044.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0045' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0046' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0047' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0048.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0049.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0050.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0051.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0052' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0053' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0054' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0055' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0056' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0057' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0058' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0059' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0060' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0061' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0062' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0063' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0064' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0065' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0066' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0067' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0068' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0069' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0070' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0071' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0072' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0073' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0074' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0075' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0076' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0077' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0078' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0080' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0081' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0082' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0083' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0084' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0085' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0086' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0087' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0088' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0089' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0090' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0091' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0092' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0093' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0094' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0095' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0096' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0097' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0098' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0099' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0100' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0101' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0102' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0103' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0104' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0105' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0106' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0107' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0108' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0109' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0110' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0111' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0112' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0113' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0114' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0115' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0116' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0117' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0118' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0119' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0120' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0121' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0122' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0123' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0124' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0125' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0126' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0127' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0128' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0129' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0130' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0131' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0132' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0133' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0134' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0135' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0136' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0137.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0138' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0139' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0140' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0141' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0142' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0143' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0144' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0145' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0146' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0147' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0148' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0149' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0150' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0151' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0152' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0153' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0154' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0155' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0156' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0157' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0158' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0159' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0160' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0161' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0162' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0163.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0164' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0165.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0166.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0167.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0168' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0169.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0170' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0171' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0172' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0173' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0174' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0175' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0176' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0177' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0178' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0179' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0180' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0181' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0182' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0183' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0184' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0185' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0186' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0187' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0188' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0189' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0190' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0191' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0192' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0193' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0194' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0195' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0196' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0197' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0198' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0199' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0200' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0201' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0202' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0203' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0204' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0205' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0206' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0207' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0208' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0209' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0210' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0211' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0212' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0213' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0214' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0215' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0216' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0217' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0218' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0219' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0220' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0221' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0222' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0223' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0224' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0225' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0226' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0227' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0228' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0229' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0230' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0231' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0232' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0233' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0234' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0235' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0236' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0239' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0240' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0241' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0242' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0243' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0244' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0245' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0246' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0247' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0248' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0249' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0250' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0252' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0254' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0255' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0256' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0257' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0258' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0259' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0260' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0261' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0262' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0263' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0264' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0265' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0266' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0267' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0268' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0269' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0270' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0271' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0272' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0273' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0274' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0275' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0276' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0277' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0278' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/strict_assignment_implements' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/strict_assignment_interface' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/strict_assignment_let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/strict_assignment_package' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/strict_assignment_private' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/strict_assignment_protected' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/strict_assignment_public' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/strict_assignment_static' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/invalid-syntax/strict_assignment_yield' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/attribute-double-quoted-string' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/attribute-element' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/attribute-entity-decimal' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/attribute-entity-hex' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/attribute-entity' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/attribute-expression' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/attribute-multi-entities' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/attribute-null-value' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/attribute-primary' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/attribute-single-quoted-string' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/attribute-spread' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/attribute-unknown-entity' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/container-object-expression' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/container-series' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/empty-child-comment' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/empty-expression-container' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/inside-group-expression' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/invalid-attribute-value-trail' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/invalid-closing-trail' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/invalid-element' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/invalid-empty-attribute-expression' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/invalid-empty-selfclosing' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/invalid-incomplete-namespace' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/invalid-match-member' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/invalid-match-name-namespace' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/invalid-match-namespace-name' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/invalid-match-namespace' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/invalid-match' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/invalid-member-incomplete' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/invalid-no-closing' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/invalid-self-closing' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/invalid-start-member' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/invalid-start-namespace' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/long-member-pair' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/long-member' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/multi-attributes' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/multiline-crlf-text' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/multiline-text' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/nested-elements' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/null-attribute-value' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/simple-deeply-nested-pair' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/simple-expression-container' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/simple-member-pair' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/simple-member' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/simple-namespace-pair' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/simple-namespace' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/simple-nested-pair' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/simple-pair' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/simple-selfclosing-linefeed' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/simple-selfclosing-whitespace' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/simple-selfclosing' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/JSX/simple-text' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/source-option/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/source-option/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/source-type-module/error-delete' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/source-type-module/error-export-if' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/source-type-module/error-export-in-function' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/source-type-module/error-import-in-function' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/source-type-module/error-invalid-export-declaration' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/source-type-module/error-invalid-import-declaration' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/source-type-module/error-strict' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/block/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/block/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/block/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/break/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/break/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/break/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/break/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/break/semicolon_newline' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/continue/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/continue/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/continue/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/continue/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/continue/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/debugger/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/empty/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/expression/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/expression/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/expression/migrated_0002.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/expression/migrated_0003.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/expression/migrated_0004.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/expression/migrated_0005.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/if/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/if/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/if/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/if/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/if/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/if/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/if/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/const_forin' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/for-in-let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/for-let-let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/for-statement-with-seq' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/invalid-strict-for-in-let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0007' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0008' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0009' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0010' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0011' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0012' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0013' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0014' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0015' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0016' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0017' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0018' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0019' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0020' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0021' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0022' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0023' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0024' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0025' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/migrated_0026' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/iteration/pattern-in-for-in' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/labelled/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/labelled/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/labelled/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/return/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/return/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/return/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/return/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/switch/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/switch/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/switch/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/throw/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/throw/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/throw/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/try/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/try/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/try/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/try/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/try/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/try/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/try/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/try/strict_simple_catch' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/variable/complex-pattern-requires-init' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/variable/invalid_trailing_comma_1' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/variable/invalid_trailing_comma_2' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/variable/invalid_trailing_comma_3' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/variable/invalid_trailing_comma_4' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/variable/invalid_trailing_comma_5' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/variable/invalid_trailing_comma_6' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/variable/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/variable/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/variable/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/variable/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/variable/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/variable/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/variable/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/variable/var_let' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/with/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/with/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/statement/with/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tokenize/leading_comment' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tokenize/line_comment' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tokenize/line_terminators' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tokenize/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tokenize/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tokenize/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tokenize/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tokenize/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tokenize/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tokenize/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tokenize/migrated_0007' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tokenize/migrated_0008' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tokenize/migrated_0009' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tokenize/migrated_0010' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tokenize/migrated_0011' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tokenize/migrated_0012' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tokenize/migrated_0014' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tokenize/migrated_0015' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tokenize/migrated_0016' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tokenize/trailing_comment' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/for-in-missing-parenthesis' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/for-missing-parenthesis' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/for-of-missing-parenthesis' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/if-missing-parenthesis' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/let_eval' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0000' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0001' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0002' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0003' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0004' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0005' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0006' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0007' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0008' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0009' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0010' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0011' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0012' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0013' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0014' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0015' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0016' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0017' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0018' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0019' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0020' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0021' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0022' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0023' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0024' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0025' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0026' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0027' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0028' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0029' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0030' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0031' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0032' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0033' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0034' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0035' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0036' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0037' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0038' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0039' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0040' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0041' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0042' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0043' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0044' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0045' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0046' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0047' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0048' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0049' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0050.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0051' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0052' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/string_literal_escape_eight' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/tolerant-parse/while-missing-parenthesis' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/whitespace/migrated_0000.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/esprima/whitespace/migrated_0001.source' {
  declare module.exports: any;
}

declare module 'flow-parser/test/hardcoded_test_runner' {
  declare module.exports: any;
}

declare module 'flow-parser/test/hardcoded_tests' {
  declare module.exports: any;
}

declare module 'flow-parser/test/run_tests' {
  declare module.exports: any;
}

declare module 'flow-parser/tools/generate_lexer_unicode_regex' {
  declare module.exports: any;
}

declare module 'flow-parser/tools/inspect_ast' {
  declare module.exports: any;
}

declare module 'flow-parser/tools/js_test_files' {
  declare module.exports: any;
}

declare module 'flow-parser/tools/process' {
  declare module.exports: any;
}

// Filename aliases
declare module 'flow-parser/flow_parser.js' {
  declare module.exports: $Exports<'flow-parser/flow_parser'>;
}
declare module 'flow-parser/test/custom_ast_types.js' {
  declare module.exports: $Exports<'flow-parser/test/custom_ast_types'>;
}
declare module 'flow-parser/test/esprima_ast_types.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima_ast_types'>;
}
declare module 'flow-parser/test/esprima_test_runner.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima_test_runner'>;
}
declare module 'flow-parser/test/esprima_tests.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima_tests'>;
}
declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0007.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0007'>;
}
declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0008.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0008'>;
}
declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0009.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0009'>;
}
declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0010.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0010'>;
}
declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0011.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0011'>;
}
declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0012.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0012'>;
}
declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0013.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0013'>;
}
declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0014.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0014'>;
}
declare module 'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0015.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/automatic-semicolon-insertion/migrated_0015'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0007.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0007'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0008.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0008'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0009.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0009'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0010.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0010'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0011.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0011'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0012.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0012'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0013.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0013'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0014.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0014'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0015.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0015'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0016.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0016'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0017.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0017'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0018.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0018'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0019.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0019'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0020.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0020'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0021.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0021'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0022.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0022'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0023.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0023'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0024.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0024'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0025.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0025'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0026.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0026'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0027.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0027'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0028.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0028'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0029.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0029'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0030.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0030'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0031.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0031'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0032.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0032'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0033.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0033'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0034.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0034'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0035.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0035'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0036.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0036'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0037.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0037'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0038.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0038'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0039.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0039'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0040.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0040'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0041.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0041'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0042.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0042'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0043.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0043'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0044.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0044'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0045.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0045'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0046.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0046'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0047.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0047'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0048.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0048'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0049.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0049'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0050.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0050'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0051.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0051'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0052.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0052'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0053.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0053'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0054.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0054'>;
}
declare module 'flow-parser/test/esprima/comment/migrated_0055.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/comment/migrated_0055'>;
}
declare module 'flow-parser/test/esprima/declaration/const/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/const/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/declaration/const/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/const/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/declaration/const/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/const/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/declaration/function/dupe-param.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/function/dupe-param'>;
}
declare module 'flow-parser/test/esprima/declaration/function/empty-param.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/function/empty-param'>;
}
declare module 'flow-parser/test/esprima/declaration/function/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/function/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/declaration/function/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/function/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/declaration/function/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/function/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/declaration/function/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/function/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/declaration/function/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/function/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/declaration/function/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/function/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/declaration/function/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/function/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/declaration/function/migrated_0007.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/function/migrated_0007'>;
}
declare module 'flow-parser/test/esprima/declaration/function/migrated_0008.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/function/migrated_0008'>;
}
declare module 'flow-parser/test/esprima/declaration/function/migrated_0009.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/function/migrated_0009'>;
}
declare module 'flow-parser/test/esprima/declaration/function/migrated_0010.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/function/migrated_0010'>;
}
declare module 'flow-parser/test/esprima/declaration/function/migrated_0011.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/function/migrated_0011'>;
}
declare module 'flow-parser/test/esprima/declaration/function/migrated_0012.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/function/migrated_0012'>;
}
declare module 'flow-parser/test/esprima/declaration/function/migrated_0013.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/function/migrated_0013'>;
}
declare module 'flow-parser/test/esprima/declaration/function/migrated_0014.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/function/migrated_0014'>;
}
declare module 'flow-parser/test/esprima/declaration/let/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/let/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/declaration/let/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/let/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/declaration/let/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/let/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/declaration/let/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/declaration/let/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/directive-prolog/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/directive-prolog/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/directive-prolog/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/directive-prolog/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/exp_assign.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/exp_assign'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/exp_bitnot.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/exp_bitnot'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/exp_delete.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/exp_delete'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/exp_minus.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/exp_minus'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/exp_minusminus.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/exp_minusminus'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/exp_not.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/exp_not'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/exp_operator.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/exp_operator'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/exp_plus.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/exp_plus'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/exp_plusplus.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/exp_plusplus'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/exp_precedence.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/exp_precedence'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/exp_typeof.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/exp_typeof'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/exp_void.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/exp_void'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/invalid_bitnot_exp.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/invalid_bitnot_exp'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/invalid_delete_exp.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/invalid_delete_exp'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/invalid_minus_exp.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/invalid_minus_exp'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/invalid_not_exp.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/invalid_not_exp'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/invalid_plus_exp.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/invalid_plus_exp'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/invalid_typeof_exp.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/invalid_typeof_exp'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/invalid_update.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/invalid_update'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/invalid_void_exp.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/invalid_void_exp'>;
}
declare module 'flow-parser/test/esprima/ES2016/exponent/update_exp.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/exponent/update_exp'>;
}
declare module 'flow-parser/test/esprima/ES2016/identifier/gujarati_zha.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES2016/identifier/gujarati_zha'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/array-binding-pattern-01.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/array-binding-pattern-01'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/array-binding-pattern-02.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/array-binding-pattern-02'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/array-binding-pattern-03.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/array-binding-pattern-03'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/array-binding-pattern-empty.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/array-binding-pattern-empty'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/elision.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/elision'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/invalid-dup-param.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/invalid-dup-param'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/invalid-elision-after-rest.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/array-binding-pattern/invalid-elision-after-rest'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/arrow-rest-forgetting-comma.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/arrow-rest-forgetting-comma'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/arrow-with-multiple-arg-and-rest.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/arrow-with-multiple-arg-and-rest'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/arrow-with-multiple-rest.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/arrow-with-multiple-rest'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/arrow-with-only-rest.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/arrow-with-only-rest'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/complex-rest-in-arrow-not-allowed.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/complex-rest-in-arrow-not-allowed'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/invalid-duplicated-params.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/invalid-duplicated-params'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/invalid-line-terminator-arrow.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/invalid-line-terminator-arrow'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/invalid-param-strict-mode.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/invalid-param-strict-mode'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0007.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0007'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0008.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0008'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0009.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0009'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0010.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0010'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0011.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0011'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0012.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0012'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0013.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0013'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0014.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0014'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0015.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0015'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0016.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0016'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0017.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0017'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0018.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0018'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0019.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0019'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/migrated_0020.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/migrated_0020'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/non-arrow-param-followed-by-arrow.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/non-arrow-param-followed-by-arrow'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/non-arrow-param-followed-by-rest.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/non-arrow-param-followed-by-rest'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/invalid-member-expr.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/invalid-member-expr'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/invalid-method-in-pattern.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/invalid-method-in-pattern'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/invalid-nested-param.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/invalid-nested-param'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/invalid-pattern-without-parenthesis.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/invalid-pattern-without-parenthesis'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/invalid-rest-in-object-pattern.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/invalid-rest-in-object-pattern'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/nested-cover-grammar.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/nested-cover-grammar'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/object-binding-pattern-01.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/object-binding-pattern-01'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/object-binding-pattern-empty.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/object-binding-pattern/object-binding-pattern-empty'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/param-with-rest-without-arrow.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/param-with-rest-without-arrow'>;
}
declare module 'flow-parser/test/esprima/ES6/arrow-function/rest-without-arrow.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/arrow-function/rest-without-arrow'>;
}
declare module 'flow-parser/test/esprima/ES6/binary-integer-literal/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binary-integer-literal/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/ES6/binary-integer-literal/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binary-integer-literal/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/ES6/binary-integer-literal/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binary-integer-literal/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/ES6/binary-integer-literal/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binary-integer-literal/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/ES6/binary-integer-literal/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binary-integer-literal/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/ES6/binary-integer-literal/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binary-integer-literal/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/dupe-param.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/dupe-param'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/elision.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/elision'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/empty-pattern-catch-param.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/empty-pattern-catch-param'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/empty-pattern-fn.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/empty-pattern-fn'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/empty-pattern-lexical.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/empty-pattern-lexical'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/empty-pattern-var.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/empty-pattern-var'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/for-let-let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/for-let-let'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/hole.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/hole'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/invalid-strict-for-let-let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/invalid-strict-for-let-let'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/nested-pattern.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/nested-pattern'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/patterned-catch-dupe.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/patterned-catch-dupe'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/patterned-catch.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/patterned-catch'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/rest.elision.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/rest.elision'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/rest.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/rest'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/tailing-hold.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/tailing-hold'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/var_let_array.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/var_let_array'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/var-for-in.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/var-for-in'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/with-default-catch-param-fail.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/with-default-catch-param-fail'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/with-default-catch-param.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/with-default-catch-param'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/with-default-fn.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/with-default-fn'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/with-object-pattern.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/array-pattern/with-object-pattern'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/elision.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/elision'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/empty-catch-param.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/empty-catch-param'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/empty-fn.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/empty-fn'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/empty-for-lex.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/empty-for-lex'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/empty-lexical.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/empty-lexical'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/empty-var.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/empty-var'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/for-let-let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/for-let-let'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/invalid-strict-for-let-let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/invalid-strict-for-let-let'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/nested.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/nested'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/properties.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/properties'>;
}
declare module 'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/var-for-in.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/binding-pattern/object-pattern/var-for-in'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0007.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0007'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0008.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0008'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0009.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0009'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0010.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0010'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0011.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0011'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0012.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0012'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0013.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0013'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0014.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0014'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0015.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0015'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0016.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0016'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0017.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0017'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0018.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0018'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0019.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0019'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0020.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0020'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0021.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0021'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0022.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0022'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0023.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0023'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0024.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0024'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0025.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0025'>;
}
declare module 'flow-parser/test/esprima/ES6/class/migrated_0026.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/class/migrated_0026'>;
}
declare module 'flow-parser/test/esprima/ES6/default-parameter-value/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/default-parameter-value/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/ES6/default-parameter-value/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/default-parameter-value/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/ES6/default-parameter-value/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/default-parameter-value/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/array-pattern/dup-assignment.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/destructuring-assignment/array-pattern/dup-assignment'>;
}
declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/array-pattern/elision.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/destructuring-assignment/array-pattern/elision'>;
}
declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/array-pattern/member-expr-in-rest.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/destructuring-assignment/array-pattern/member-expr-in-rest'>;
}
declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/array-pattern/nested-assignment.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/destructuring-assignment/array-pattern/nested-assignment'>;
}
declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/array-pattern/nested-cover-grammar.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/destructuring-assignment/array-pattern/nested-cover-grammar'>;
}
declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/array-pattern/simple-assignment.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/destructuring-assignment/array-pattern/simple-assignment'>;
}
declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/invalid-cover-grammar.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/destructuring-assignment/invalid-cover-grammar'>;
}
declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/invalid-group-assignment.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/destructuring-assignment/invalid-group-assignment'>;
}
declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/object-pattern/empty-object-pattern-assignment.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/destructuring-assignment/object-pattern/empty-object-pattern-assignment'>;
}
declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/object-pattern/invalid-lhs-01.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/destructuring-assignment/object-pattern/invalid-lhs-01'>;
}
declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/object-pattern/invalid-lhs-02.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/destructuring-assignment/object-pattern/invalid-lhs-02'>;
}
declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/object-pattern/invalid-pattern-with-method.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/destructuring-assignment/object-pattern/invalid-pattern-with-method'>;
}
declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/object-pattern/nested-cover-grammar.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/destructuring-assignment/object-pattern/nested-cover-grammar'>;
}
declare module 'flow-parser/test/esprima/ES6/destructuring-assignment/object-pattern/object-pattern-assignment.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/destructuring-assignment/object-pattern/object-pattern-assignment'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-const-number.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-const-number'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-default-array.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-default-array'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-default-class.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-default-class'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-default-expression.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-default-expression'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-default-function.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-default-function'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-default-named-function.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-default-named-function'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-default-number.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-default-number'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-default-object.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-default-object'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-default-value.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-default-value'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-from-batch.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-from-batch'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-from-default.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-from-default'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-from-named-as-default.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-from-named-as-default'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-from-named-as-specifier.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-from-named-as-specifier'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-from-named-as-specifiers.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-from-named-as-specifiers'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-from-specifier.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-from-specifier'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-from-specifiers.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-from-specifiers'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-function-declaration.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-function-declaration'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-function.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-function'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-let-number.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-let-number'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-named-as-default.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-named-as-default'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-named-as-specifier.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-named-as-specifier'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-named-as-specifiers.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-named-as-specifiers'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-named-empty.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-named-empty'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-named-specifier.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-named-specifier'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-named-specifiers-comma.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-named-specifiers-comma'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-named-specifiers.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-named-specifiers'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-var-anonymous-function.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-var-anonymous-function'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-var-number.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-var-number'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/export-var.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/export-var'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/invalid-export-batch-missing-from-clause.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/invalid-export-batch-missing-from-clause'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/invalid-export-batch-token.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/invalid-export-batch-token'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/invalid-export-default-equal.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/invalid-export-default-equal'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/invalid-export-default-token.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/invalid-export-default-token'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/invalid-export-default.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/invalid-export-default'>;
}
declare module 'flow-parser/test/esprima/ES6/export-declaration/invalid-export-named-default.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/export-declaration/invalid-export-named-default'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/for-of-array-pattern-let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/for-of-array-pattern-let'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/for-of-array-pattern-var.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/for-of-array-pattern-var'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/for-of-array-pattern.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/for-of-array-pattern'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/for-of-let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/for-of-let'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/for-of-object-pattern-const.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/for-of-object-pattern-const'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/for-of-object-pattern-var.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/for-of-object-pattern-var'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/for-of-object-pattern.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/for-of-object-pattern'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/for-of-with-const.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/for-of-with-const'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/for-of-with-let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/for-of-with-let'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/for-of-with-var.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/for-of-with-var'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/for-of.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/for-of'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/invalid_const_let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/invalid_const_let'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/invalid_let_let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/invalid_let_let'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/invalid-const-init.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/invalid-const-init'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/invalid-for-of-array-pattern.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/invalid-for-of-array-pattern'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/invalid-for-of-object-pattern.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/invalid-for-of-object-pattern'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/invalid-let-init.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/invalid-let-init'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/invalid-lhs-init.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/invalid-lhs-init'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/invalid-strict-for-of-let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/invalid-strict-for-of-let'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/invalid-var-init.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/invalid-var-init'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/let-of-of.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/let-of-of'>;
}
declare module 'flow-parser/test/esprima/ES6/for-of/unexpected-number.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/for-of/unexpected-number'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-declaration-with-params.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-declaration-with-params'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-declaration-with-yield-delegate.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-declaration-with-yield-delegate'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-declaration-with-yield.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-declaration-with-yield'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-declaration.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-declaration'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-expression-rest-param.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-expression-rest-param'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-expression-with-params.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-expression-with-params'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-expression-with-yield-delegate.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-expression-with-yield-delegate'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-expression-with-yield.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-expression-with-yield'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-expression.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-expression'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-method-with-computed-name.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-method-with-computed-name'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-method-with-invalid-computed-name.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-method-with-invalid-computed-name'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-method-with-params.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-method-with-params'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-method-with-yield-delegate.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-method-with-yield-delegate'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-method-with-yield-expression.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-method-with-yield-expression'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-method-with-yield-line-terminator.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-method-with-yield-line-terminator'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-method-with-yield.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-method-with-yield'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-method.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-method'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-parameter-binding-element.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-parameter-binding-element'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-parameter-binding-property-reserved.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-parameter-binding-property-reserved'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-parameter-binding-property.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-parameter-binding-property'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-parameter-computed-property-name.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-parameter-computed-property-name'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-parameter-invalid-binding-element.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-parameter-invalid-binding-element'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-parameter-invalid-binding-property.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-parameter-invalid-binding-property'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/generator-parameter-invalid-computed-property-name.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/generator-parameter-invalid-computed-property-name'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/incomplete-yield-delegate.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/incomplete-yield-delegate'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/malformed-generator-method-2.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/malformed-generator-method-2'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/malformed-generator-method.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/malformed-generator-method'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/static-generator-method-with-computed-name.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/static-generator-method-with-computed-name'>;
}
declare module 'flow-parser/test/esprima/ES6/generator/static-generator-method.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/generator/static-generator-method'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/dakuten_handakuten.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/dakuten_handakuten'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/escaped_all.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/escaped_all'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/escaped_math_alef.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/escaped_math_alef'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/escaped_math_dal_part.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/escaped_math_dal_part'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/escaped_math_kaf_lam.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/escaped_math_kaf_lam'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/escaped_math_zain_start.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/escaped_math_zain_start'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/escaped_part.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/escaped_part'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/escaped_start.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/escaped_start'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/estimated.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/estimated'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/ethiopic_digits.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/ethiopic_digits'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/invalid_escaped_surrogate_pairs.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/invalid_escaped_surrogate_pairs'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/invalid_expression_await.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/invalid_expression_await'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/invalid_function_wait.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/invalid_function_wait'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/invalid_id_smp.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/invalid_id_smp'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/invalid_lone_surrogate.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/invalid_lone_surrogate.source'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/invalid_var_await.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/invalid_var_await'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/math_alef.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/math_alef'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/math_dal_part.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/math_dal_part'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/math_kaf_lam.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/math_kaf_lam'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/math_zain_start.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/math_zain_start'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/module_await.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/module_await'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/valid_await.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/valid_await'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/weierstrass_weierstrass.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/weierstrass_weierstrass'>;
}
declare module 'flow-parser/test/esprima/ES6/identifier/weierstrass.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/identifier/weierstrass'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/import-default-and-named-specifiers.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/import-default-and-named-specifiers'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/import-default-and-namespace-specifiers.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/import-default-and-namespace-specifiers'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/import-default-as.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/import-default-as'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/import-default.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/import-default'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/import-jquery.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/import-jquery'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/import-module.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/import-module'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/import-named-as-specifier.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/import-named-as-specifier'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/import-named-as-specifiers.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/import-named-as-specifiers'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/import-named-empty.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/import-named-empty'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/import-named-specifier.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/import-named-specifier'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/import-named-specifiers-comma.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/import-named-specifiers-comma'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/import-named-specifiers.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/import-named-specifiers'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/import-namespace-specifier.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/import-namespace-specifier'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/import-null-as-nil.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/import-null-as-nil'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-default-after-named-after-default.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/invalid-import-default-after-named-after-default'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-default-after-named.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/invalid-import-default-after-named'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-default-missing-module-specifier.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/invalid-import-default-missing-module-specifier'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-default-module-specifier.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/invalid-import-default-module-specifier'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-default.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/invalid-import-default'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-missing-comma.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/invalid-import-missing-comma'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-missing-module-specifier.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/invalid-import-missing-module-specifier'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-module-specifier.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/invalid-import-module-specifier'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-named-after-named.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/invalid-import-named-after-named'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-named-after-namespace.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/invalid-import-named-after-namespace'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-named-as-missing-from.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/invalid-import-named-as-missing-from'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-namespace-after-named.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/invalid-import-namespace-after-named'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-namespace-missing-as.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/invalid-import-namespace-missing-as'>;
}
declare module 'flow-parser/test/esprima/ES6/import-declaration/invalid-import-specifiers.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/import-declaration/invalid-import-specifiers'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/for_let_in.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/for_let_in'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_complex_binding_without_init.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_complex_binding_without_init'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_const_const.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_const_const'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_const_forin.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_const_forin'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_const_let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_const_let'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_for_const_declarations.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_for_const_declarations'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_for_const_let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_for_const_let'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_for_let_declarations.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_for_let_declarations'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_for_let_init.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_for_let_init'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_for_let_let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_for_let_let'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_for_let_pattern.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_for_let_pattern'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_forin_const_let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_forin_const_let'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_forin_let_let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_forin_let_let'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_let_declarations.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_let_declarations'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_let_for_in.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_let_for_in'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_let_forin.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_let_forin'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_let_init.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_let_init'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_let_let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_let_let'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_strict_const_const.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_strict_const_const'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_strict_const_let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_strict_const_let'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_1.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_1'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_2.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_2'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_3.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_3'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_4.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_4'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_5.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_5'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_6.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_6'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_7.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/invalid_trailing_comma_7'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/let_assign.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/let_assign'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/let_identifier.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/let_identifier'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/let_member.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/let_member'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/ES6/lexical-declaration/module_let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/lexical-declaration/module_let'>;
}
declare module 'flow-parser/test/esprima/ES6/meta-property/assign-new-target.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/meta-property/assign-new-target'>;
}
declare module 'flow-parser/test/esprima/ES6/meta-property/invalid-dots.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/meta-property/invalid-dots'>;
}
declare module 'flow-parser/test/esprima/ES6/meta-property/invalid-new-target.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/meta-property/invalid-new-target'>;
}
declare module 'flow-parser/test/esprima/ES6/meta-property/new-new-target.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/meta-property/new-new-target'>;
}
declare module 'flow-parser/test/esprima/ES6/meta-property/new-target-declaration.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/meta-property/new-target-declaration'>;
}
declare module 'flow-parser/test/esprima/ES6/meta-property/new-target-expression.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/meta-property/new-target-expression'>;
}
declare module 'flow-parser/test/esprima/ES6/meta-property/new-target-invoke.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/meta-property/new-target-invoke'>;
}
declare module 'flow-parser/test/esprima/ES6/meta-property/new-target-precedence.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/meta-property/new-target-precedence'>;
}
declare module 'flow-parser/test/esprima/ES6/meta-property/unknown-property.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/meta-property/unknown-property'>;
}
declare module 'flow-parser/test/esprima/ES6/method-definition/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/method-definition/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/ES6/method-definition/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/method-definition/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/ES6/method-definition/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/method-definition/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/ES6/method-definition/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/method-definition/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/ES6/method-definition/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/method-definition/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-getter-literal-identifier.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-getter-literal-identifier'>;
}
declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-identifier-literal.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-identifier-literal'>;
}
declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-identifier-shorthand.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-identifier-shorthand'>;
}
declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-identifiers.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-identifiers'>;
}
declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-literal-identifier.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-literal-identifier'>;
}
declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-literal-shorthand.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-literal-shorthand'>;
}
declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-literals.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-literals'>;
}
declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-setter-literal-identifier.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-setter-literal-identifier'>;
}
declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-shorthand-identifier.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-shorthand-identifier'>;
}
declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-shorthand-literal.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-shorthand-literal'>;
}
declare module 'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-shorthands.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/object-initialiser/invalid-proto-shorthands'>;
}
declare module 'flow-parser/test/esprima/ES6/object-initialiser/proto-identifier-getter-setter.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/object-initialiser/proto-identifier-getter-setter'>;
}
declare module 'flow-parser/test/esprima/ES6/object-initialiser/proto-identifier-getter.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/object-initialiser/proto-identifier-getter'>;
}
declare module 'flow-parser/test/esprima/ES6/object-initialiser/proto-identifier-method.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/object-initialiser/proto-identifier-method'>;
}
declare module 'flow-parser/test/esprima/ES6/object-initialiser/proto-identifier-setter.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/object-initialiser/proto-identifier-setter'>;
}
declare module 'flow-parser/test/esprima/ES6/object-initialiser/proto-literal-getter-setter.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/object-initialiser/proto-literal-getter-setter'>;
}
declare module 'flow-parser/test/esprima/ES6/object-initialiser/proto-literal-getter.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/object-initialiser/proto-literal-getter'>;
}
declare module 'flow-parser/test/esprima/ES6/object-initialiser/proto-literal-method.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/object-initialiser/proto-literal-method'>;
}
declare module 'flow-parser/test/esprima/ES6/object-initialiser/proto-literal-setter.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/object-initialiser/proto-literal-setter'>;
}
declare module 'flow-parser/test/esprima/ES6/object-literal-property-value-shorthand/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/object-literal-property-value-shorthand/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/octal-integer-literal/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/ES6/rest-parameter/function-declaration.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/rest-parameter/function-declaration'>;
}
declare module 'flow-parser/test/esprima/ES6/rest-parameter/function-expression.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/rest-parameter/function-expression'>;
}
declare module 'flow-parser/test/esprima/ES6/rest-parameter/object-method.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/rest-parameter/object-method'>;
}
declare module 'flow-parser/test/esprima/ES6/rest-parameter/object-shorthand-method.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/rest-parameter/object-shorthand-method'>;
}
declare module 'flow-parser/test/esprima/ES6/spread-element/call-multi-spread.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/spread-element/call-multi-spread'>;
}
declare module 'flow-parser/test/esprima/ES6/spread-element/call-spread-default.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/spread-element/call-spread-default'>;
}
declare module 'flow-parser/test/esprima/ES6/spread-element/call-spread-first.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/spread-element/call-spread-first'>;
}
declare module 'flow-parser/test/esprima/ES6/spread-element/call-spread-number.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/spread-element/call-spread-number'>;
}
declare module 'flow-parser/test/esprima/ES6/spread-element/call-spread.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/spread-element/call-spread'>;
}
declare module 'flow-parser/test/esprima/ES6/spread-element/invalid-call-dot-dot.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/spread-element/invalid-call-dot-dot'>;
}
declare module 'flow-parser/test/esprima/ES6/spread-element/invalid-call-dots.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/spread-element/invalid-call-dots'>;
}
declare module 'flow-parser/test/esprima/ES6/spread-element/invalid-call-spreads.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/spread-element/invalid-call-spreads'>;
}
declare module 'flow-parser/test/esprima/ES6/spread-element/invalid-new-dot-dot.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/spread-element/invalid-new-dot-dot'>;
}
declare module 'flow-parser/test/esprima/ES6/spread-element/invalid-new-dots.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/spread-element/invalid-new-dots'>;
}
declare module 'flow-parser/test/esprima/ES6/spread-element/invalid-new-spreads.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/spread-element/invalid-new-spreads'>;
}
declare module 'flow-parser/test/esprima/ES6/spread-element/new-multi-spread.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/spread-element/new-multi-spread'>;
}
declare module 'flow-parser/test/esprima/ES6/spread-element/new-spread-default.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/spread-element/new-spread-default'>;
}
declare module 'flow-parser/test/esprima/ES6/spread-element/new-spread-first.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/spread-element/new-spread-first'>;
}
declare module 'flow-parser/test/esprima/ES6/spread-element/new-spread-number.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/spread-element/new-spread-number'>;
}
declare module 'flow-parser/test/esprima/ES6/spread-element/new-spread.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/spread-element/new-spread'>;
}
declare module 'flow-parser/test/esprima/ES6/super-property/arrow_super.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/super-property/arrow_super'>;
}
declare module 'flow-parser/test/esprima/ES6/super-property/constructor_super.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/super-property/constructor_super'>;
}
declare module 'flow-parser/test/esprima/ES6/super-property/invalid_super_access.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/super-property/invalid_super_access'>;
}
declare module 'flow-parser/test/esprima/ES6/super-property/invalid_super_id.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/super-property/invalid_super_id'>;
}
declare module 'flow-parser/test/esprima/ES6/super-property/invalid_super_not_inside_function.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/super-property/invalid_super_not_inside_function'>;
}
declare module 'flow-parser/test/esprima/ES6/super-property/new_super.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/super-property/new_super'>;
}
declare module 'flow-parser/test/esprima/ES6/super-property/super_computed.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/super-property/super_computed'>;
}
declare module 'flow-parser/test/esprima/ES6/super-property/super_member.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/super-property/super_member'>;
}
declare module 'flow-parser/test/esprima/ES6/template-literals/after-switch.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/template-literals/after-switch'>;
}
declare module 'flow-parser/test/esprima/ES6/template-literals/dollar-sign.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/template-literals/dollar-sign'>;
}
declare module 'flow-parser/test/esprima/ES6/template-literals/escape-sequences.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/template-literals/escape-sequences.source'>;
}
declare module 'flow-parser/test/esprima/ES6/template-literals/invalid-escape.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/template-literals/invalid-escape'>;
}
declare module 'flow-parser/test/esprima/ES6/template-literals/line-terminators.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/template-literals/line-terminators.source'>;
}
declare module 'flow-parser/test/esprima/ES6/template-literals/literal-escape-sequences.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/template-literals/literal-escape-sequences.source'>;
}
declare module 'flow-parser/test/esprima/ES6/template-literals/new-expression.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/template-literals/new-expression'>;
}
declare module 'flow-parser/test/esprima/ES6/template-literals/octal-literal.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/template-literals/octal-literal'>;
}
declare module 'flow-parser/test/esprima/ES6/template-literals/strict-octal-literal.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/template-literals/strict-octal-literal'>;
}
declare module 'flow-parser/test/esprima/ES6/template-literals/tagged-interpolation.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/template-literals/tagged-interpolation'>;
}
declare module 'flow-parser/test/esprima/ES6/template-literals/tagged-nested-with-object-literal.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/template-literals/tagged-nested-with-object-literal'>;
}
declare module 'flow-parser/test/esprima/ES6/template-literals/tagged.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/template-literals/tagged'>;
}
declare module 'flow-parser/test/esprima/ES6/template-literals/unclosed-interpolation.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/template-literals/unclosed-interpolation'>;
}
declare module 'flow-parser/test/esprima/ES6/template-literals/unclosed-nested.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/template-literals/unclosed-nested'>;
}
declare module 'flow-parser/test/esprima/ES6/template-literals/unclosed.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/template-literals/unclosed'>;
}
declare module 'flow-parser/test/esprima/ES6/template-literals/untagged.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/template-literals/untagged'>;
}
declare module 'flow-parser/test/esprima/ES6/unicode-code-point-escape-sequence/migrated_0000.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/unicode-code-point-escape-sequence/migrated_0000.source'>;
}
declare module 'flow-parser/test/esprima/ES6/unicode-code-point-escape-sequence/migrated_0001.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/unicode-code-point-escape-sequence/migrated_0001.source'>;
}
declare module 'flow-parser/test/esprima/ES6/unicode-code-point-escape-sequence/migrated_0002.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/unicode-code-point-escape-sequence/migrated_0002.source'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-binding-property.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-binding-property'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-expression.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-expression'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-arrow-default.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-arrow-default'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-arrow-parameter.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-arrow-parameter'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-arrow-parameters.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-arrow-parameters'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-catch.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-catch'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-declaration.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-declaration'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-export-default.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-export-default'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-expression-name.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-expression-name'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-expression-parameter.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-expression-parameter'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-expression-rest.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-expression-rest'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-function-declaration.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-function-declaration'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-lexical-declaration.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-lexical-declaration'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-member-expression.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-member-expression'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-parameter.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-parameter'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-rest.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-rest'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-strict-function-expression.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-strict-function-expression'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-strict-function-parameter.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-strict-function-parameter'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-variable-declaration.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-generator-variable-declaration'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-array-pattern.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-array-pattern'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-arrow-parameter-default.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-arrow-parameter-default'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-arrow-parameter-name.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-arrow-parameter-name'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-binding-element.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-binding-element'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-catch-parameter.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-catch-parameter'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-formal-parameter.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-formal-parameter'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-function-declaration.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-function-declaration'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-function-expression.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-function-expression'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-identifier.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-identifier'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-lexical-declaration.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-lexical-declaration'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-rest-parameter.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-rest-parameter'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-variable-declaration.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/invalid-yield-strict-variable-declaration'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-array-pattern.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-array-pattern'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-arrow-concise-body.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-arrow-concise-body'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-arrow-function-body.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-arrow-function-body'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-arrow-parameter-default.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-arrow-parameter-default'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-arrow-parameter-name.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-arrow-parameter-name'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-binding-element.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-binding-element'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-binding-property.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-binding-property'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-call-expression-property.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-call-expression-property'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-catch-parameter.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-catch-parameter'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-expression-precedence.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-expression-precedence'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-function-declaration-formal-parameter.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-function-declaration-formal-parameter'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-function-declaration.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-function-declaration'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-function-expression-parameter.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-function-expression-parameter'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-function-expression.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-function-expression'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-generator-arrow-concise-body.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-generator-arrow-concise-body'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-generator-arrow-default.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-generator-arrow-default'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-generator-arrow-function-body.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-generator-arrow-function-body'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-generator-declaration.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-generator-declaration'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-generator-default-parameter.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-generator-default-parameter'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-generator-function-expression.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-generator-function-expression'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-generator-function-parameter.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-generator-function-parameter'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-generator-method.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-generator-method'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-generator-parameter-object-pattern.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-generator-parameter-object-pattern'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-lexical-declaration.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-lexical-declaration'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-member-expression-property.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-member-expression-property'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-method.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-method'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-parameter-object-pattern.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-parameter-object-pattern'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-rest-parameter.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-rest-parameter'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-strict-binding-property.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-strict-binding-property'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-strict-method.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-strict-method'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-super-property.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-super-property'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-variable-declaration.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-variable-declaration'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-yield-expression-delegate.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-yield-expression-delegate'>;
}
declare module 'flow-parser/test/esprima/ES6/yield/yield-yield-expression.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/ES6/yield/yield-yield-expression'>;
}
declare module 'flow-parser/test/esprima/expression/additive/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/additive/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/additive/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/additive/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/expression/additive/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/additive/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/expression/assignment/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/assignment/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/assignment/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/assignment/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/expression/assignment/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/assignment/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/expression/assignment/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/assignment/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/expression/assignment/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/assignment/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/expression/assignment/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/assignment/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/expression/assignment/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/assignment/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/expression/assignment/migrated_0007.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/assignment/migrated_0007'>;
}
declare module 'flow-parser/test/esprima/expression/assignment/migrated_0008.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/assignment/migrated_0008'>;
}
declare module 'flow-parser/test/esprima/expression/assignment/migrated_0009.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/assignment/migrated_0009'>;
}
declare module 'flow-parser/test/esprima/expression/assignment/migrated_0010.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/assignment/migrated_0010'>;
}
declare module 'flow-parser/test/esprima/expression/assignment/migrated_0011.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/assignment/migrated_0011'>;
}
declare module 'flow-parser/test/esprima/expression/assignment/migrated_0012.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/assignment/migrated_0012'>;
}
declare module 'flow-parser/test/esprima/expression/assignment/migrated_0013.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/assignment/migrated_0013'>;
}
declare module 'flow-parser/test/esprima/expression/binary-bitwise/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary-bitwise/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/binary-bitwise/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary-bitwise/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/expression/binary-bitwise/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary-bitwise/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/expression/binary-logical/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary-logical/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/binary-logical/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary-logical/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/expression/binary-logical/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary-logical/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/expression/binary-logical/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary-logical/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/expression/binary-logical/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary-logical/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/expression/binary-logical/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary-logical/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/expression/binary/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/binary/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/expression/binary/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/expression/binary/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/expression/binary/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/expression/binary/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/expression/binary/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/expression/binary/migrated_0007.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary/migrated_0007'>;
}
declare module 'flow-parser/test/esprima/expression/binary/migrated_0008.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary/migrated_0008'>;
}
declare module 'flow-parser/test/esprima/expression/binary/migrated_0009.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary/migrated_0009'>;
}
declare module 'flow-parser/test/esprima/expression/binary/migrated_0010.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary/migrated_0010'>;
}
declare module 'flow-parser/test/esprima/expression/binary/migrated_0011.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary/migrated_0011'>;
}
declare module 'flow-parser/test/esprima/expression/binary/migrated_0012.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary/migrated_0012'>;
}
declare module 'flow-parser/test/esprima/expression/binary/migrated_0013.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary/migrated_0013'>;
}
declare module 'flow-parser/test/esprima/expression/binary/migrated_0014.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary/migrated_0014'>;
}
declare module 'flow-parser/test/esprima/expression/binary/migrated_0015.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary/migrated_0015'>;
}
declare module 'flow-parser/test/esprima/expression/binary/migrated_0016.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary/migrated_0016'>;
}
declare module 'flow-parser/test/esprima/expression/binary/migrated_0017.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/binary/migrated_0017'>;
}
declare module 'flow-parser/test/esprima/expression/bitwise-shift/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/bitwise-shift/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/bitwise-shift/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/bitwise-shift/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/expression/bitwise-shift/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/bitwise-shift/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/expression/complex/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/complex/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/conditional/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/conditional/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/conditional/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/conditional/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/expression/conditional/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/conditional/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/expression/equality/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/equality/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/equality/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/equality/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/expression/equality/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/equality/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/expression/equality/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/equality/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/expression/grouping/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/grouping/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/grouping/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/grouping/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/let_object_computed.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/let_object_computed'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0007.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0007'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0008.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0008'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0009.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0009'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0010.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0010'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0011.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0011'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0012.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0012'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0013.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0013'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0014.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0014'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0015.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0015'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0016.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0016'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0017.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0017'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0018.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0018'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0019.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0019'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0020.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0020'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0021.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0021'>;
}
declare module 'flow-parser/test/esprima/expression/left-hand-side/migrated_0022.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/left-hand-side/migrated_0022'>;
}
declare module 'flow-parser/test/esprima/expression/multiplicative/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/multiplicative/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/multiplicative/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/multiplicative/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/expression/multiplicative/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/multiplicative/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/expression/postfix/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/postfix/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/postfix/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/postfix/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/expression/postfix/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/postfix/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/expression/postfix/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/postfix/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/expression/postfix/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/postfix/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/expression/postfix/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/postfix/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/array/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/array/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/array/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/array/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/array/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/array/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/array/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0007.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/array/migrated_0007'>;
}
declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0008.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/array/migrated_0008.source'>;
}
declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0009.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/array/migrated_0009.source'>;
}
declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0010.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/array/migrated_0010.source'>;
}
declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0011.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/array/migrated_0011.source'>;
}
declare module 'flow-parser/test/esprima/expression/primary/array/migrated_0012.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/array/migrated_0012.source'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0007.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0007'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0008.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0008'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0009.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0009'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0010.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0010'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0011.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0011'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0012.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0012'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0013.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0013'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0014.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0014'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0015.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0015'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0016.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0016'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0017.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0017'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0018.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0018'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0019.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0019'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0020.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0020'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0021.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0021'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0022.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0022'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0023.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0023'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0024.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/numeric/migrated_0024'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0005.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0005.source'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0006.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0006.source'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0007.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0007'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0008.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0008'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0009.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0009'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0010.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0010'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0011.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0011'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0012.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0012'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0013.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/regular-expression/migrated_0013'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/u-flag-invalid-range-4-hex.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/regular-expression/u-flag-invalid-range-4-hex'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/u-flag-invalid-range-var-hex.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/regular-expression/u-flag-invalid-range-var-hex'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/u-flag-surrogate-pair.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/regular-expression/u-flag-surrogate-pair'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/regular-expression/u-flag-valid-range.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/regular-expression/u-flag-valid-range'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/string/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/string/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0002.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/string/migrated_0002.source'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/string/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/string/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0007.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/string/migrated_0007'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0008.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/string/migrated_0008'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0009.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/string/migrated_0009'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0010.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/string/migrated_0010'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0011.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/string/migrated_0011'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0012.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/string/migrated_0012'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0013.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/string/migrated_0013'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0015.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/string/migrated_0015'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0016.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/string/migrated_0016'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0017.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/string/migrated_0017'>;
}
declare module 'flow-parser/test/esprima/expression/primary/literal/string/migrated_0018.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/literal/string/migrated_0018'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0007.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0007'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0008.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0008'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0009.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0009'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0010.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0010'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0011.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0011'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0012.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0012'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0013.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0013'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0014.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0014'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0015.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0015'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0016.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0016'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0017.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0017'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0018.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0018'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0019.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0019'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0020.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0020'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0021.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0021'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0022.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0022'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0023.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0023'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0024.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0024'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0025.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0025'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0026.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0026'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0027.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0027'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0028.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0028'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0029.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0029'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0030.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0030'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0031.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0031'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0032.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0032'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0033.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0033'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0034.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0034'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0035.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0035'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0036.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0036'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0037.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0037'>;
}
declare module 'flow-parser/test/esprima/expression/primary/object/migrated_0038.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/object/migrated_0038'>;
}
declare module 'flow-parser/test/esprima/expression/primary/other/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/other/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/primary/other/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/other/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/expression/primary/other/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/other/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/expression/primary/other/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/primary/other/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/expression/relational/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/relational/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/relational/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/relational/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/expression/relational/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/relational/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/expression/relational/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/relational/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/expression/relational/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/relational/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/expression/relational/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/relational/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/expression/relational/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/relational/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/expression/unary/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/unary/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/expression/unary/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/unary/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/expression/unary/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/unary/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/expression/unary/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/unary/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/expression/unary/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/unary/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/expression/unary/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/unary/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/expression/unary/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/unary/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/expression/unary/migrated_0007.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/unary/migrated_0007'>;
}
declare module 'flow-parser/test/esprima/expression/unary/migrated_0008.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/unary/migrated_0008'>;
}
declare module 'flow-parser/test/esprima/expression/unary/migrated_0009.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/unary/migrated_0009'>;
}
declare module 'flow-parser/test/esprima/expression/unary/migrated_0010.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/unary/migrated_0010'>;
}
declare module 'flow-parser/test/esprima/expression/unary/migrated_0011.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/unary/migrated_0011'>;
}
declare module 'flow-parser/test/esprima/expression/unary/migrated_0012.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/expression/unary/migrated_0012'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/GH-1106-00.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/GH-1106-00'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/GH-1106-01.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/GH-1106-01'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/GH-1106-02.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/GH-1106-02'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/GH-1106-03.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/GH-1106-03'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/GH-1106-04.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/GH-1106-04'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/GH-1106-05.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/GH-1106-05'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/GH-1106-06.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/GH-1106-06'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/GH-1106-07.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/GH-1106-07'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/GH-1106-08.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/GH-1106-08'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/GH-1106-09.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/GH-1106-09'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0007.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0007'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0008.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0008'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0009.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0009'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0010.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0010'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0011.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0011'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0012.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0012'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0013.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0013'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0014.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0014'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0015.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0015'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0016.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0016'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0017.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0017'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0018.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0018'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0019.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0019'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0020.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0020'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0021.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0021'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0022.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0022'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0023.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0023'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0024.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0024'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0025.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0025'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0026.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0026'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0027.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0027'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0028.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0028'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0029.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0029'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0030.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0030'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0031.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0031'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0032.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0032'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0033.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0033.source'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0034.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0034.source'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0035.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0035'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0036.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0036.source'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0037.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0037.source'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0038.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0038'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0039.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0039'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0040.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0040'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0041.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0041.source'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0042.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0042.source'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0043.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0043.source'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0044.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0044.source'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0045.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0045'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0046.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0046'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0047.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0047'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0048.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0048.source'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0049.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0049.source'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0050.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0050.source'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0051.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0051.source'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0052.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0052'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0053.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0053'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0054.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0054'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0055.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0055'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0056.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0056'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0057.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0057'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0058.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0058'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0059.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0059'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0060.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0060'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0061.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0061'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0062.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0062'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0063.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0063'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0064.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0064'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0065.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0065'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0066.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0066'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0067.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0067'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0068.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0068'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0069.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0069'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0070.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0070'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0071.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0071'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0072.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0072'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0073.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0073'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0074.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0074'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0075.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0075'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0076.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0076'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0077.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0077'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0078.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0078'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0080.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0080'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0081.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0081'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0082.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0082'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0083.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0083'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0084.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0084'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0085.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0085'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0086.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0086'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0087.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0087'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0088.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0088'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0089.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0089'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0090.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0090'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0091.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0091'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0092.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0092'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0093.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0093'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0094.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0094'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0095.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0095'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0096.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0096'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0097.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0097'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0098.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0098'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0099.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0099'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0100.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0100'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0101.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0101'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0102.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0102'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0103.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0103'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0104.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0104'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0105.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0105'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0106.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0106'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0107.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0107'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0108.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0108'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0109.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0109'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0110.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0110'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0111.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0111'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0112.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0112'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0113.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0113'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0114.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0114'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0115.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0115'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0116.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0116'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0117.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0117'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0118.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0118'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0119.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0119'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0120.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0120'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0121.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0121'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0122.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0122'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0123.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0123'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0124.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0124'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0125.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0125'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0126.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0126'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0127.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0127'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0128.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0128'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0129.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0129'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0130.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0130'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0131.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0131'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0132.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0132'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0133.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0133'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0134.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0134'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0135.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0135'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0136.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0136'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0137.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0137.source'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0138.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0138'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0139.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0139'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0140.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0140'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0141.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0141'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0142.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0142'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0143.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0143'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0144.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0144'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0145.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0145'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0146.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0146'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0147.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0147'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0148.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0148'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0149.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0149'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0150.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0150'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0151.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0151'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0152.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0152'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0153.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0153'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0154.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0154'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0155.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0155'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0156.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0156'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0157.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0157'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0158.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0158'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0159.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0159'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0160.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0160'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0161.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0161'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0162.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0162'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0163.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0163.source'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0164.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0164'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0165.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0165.source'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0166.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0166.source'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0167.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0167.source'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0168.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0168'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0169.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0169.source'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0170.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0170'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0171.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0171'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0172.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0172'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0173.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0173'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0174.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0174'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0175.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0175'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0176.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0176'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0177.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0177'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0178.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0178'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0179.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0179'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0180.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0180'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0181.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0181'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0182.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0182'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0183.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0183'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0184.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0184'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0185.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0185'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0186.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0186'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0187.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0187'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0188.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0188'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0189.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0189'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0190.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0190'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0191.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0191'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0192.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0192'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0193.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0193'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0194.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0194'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0195.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0195'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0196.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0196'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0197.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0197'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0198.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0198'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0199.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0199'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0200.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0200'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0201.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0201'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0202.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0202'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0203.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0203'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0204.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0204'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0205.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0205'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0206.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0206'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0207.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0207'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0208.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0208'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0209.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0209'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0210.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0210'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0211.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0211'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0212.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0212'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0213.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0213'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0214.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0214'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0215.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0215'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0216.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0216'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0217.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0217'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0218.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0218'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0219.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0219'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0220.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0220'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0221.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0221'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0222.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0222'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0223.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0223'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0224.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0224'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0225.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0225'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0226.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0226'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0227.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0227'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0228.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0228'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0229.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0229'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0230.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0230'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0231.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0231'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0232.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0232'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0233.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0233'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0234.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0234'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0235.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0235'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0236.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0236'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0239.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0239'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0240.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0240'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0241.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0241'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0242.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0242'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0243.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0243'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0244.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0244'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0245.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0245'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0246.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0246'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0247.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0247'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0248.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0248'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0249.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0249'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0250.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0250'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0252.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0252'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0254.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0254'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0255.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0255'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0256.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0256'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0257.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0257'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0258.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0258'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0259.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0259'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0260.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0260'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0261.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0261'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0262.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0262'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0263.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0263'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0264.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0264'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0265.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0265'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0266.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0266'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0267.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0267'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0268.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0268'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0269.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0269'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0270.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0270'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0271.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0271'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0272.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0272'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0273.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0273'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0274.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0274'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0275.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0275'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0276.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0276'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0277.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0277'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/migrated_0278.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/migrated_0278'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/strict_assignment_implements.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/strict_assignment_implements'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/strict_assignment_interface.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/strict_assignment_interface'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/strict_assignment_let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/strict_assignment_let'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/strict_assignment_package.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/strict_assignment_package'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/strict_assignment_private.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/strict_assignment_private'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/strict_assignment_protected.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/strict_assignment_protected'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/strict_assignment_public.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/strict_assignment_public'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/strict_assignment_static.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/strict_assignment_static'>;
}
declare module 'flow-parser/test/esprima/invalid-syntax/strict_assignment_yield.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/invalid-syntax/strict_assignment_yield'>;
}
declare module 'flow-parser/test/esprima/JSX/attribute-double-quoted-string.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/attribute-double-quoted-string'>;
}
declare module 'flow-parser/test/esprima/JSX/attribute-element.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/attribute-element'>;
}
declare module 'flow-parser/test/esprima/JSX/attribute-entity-decimal.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/attribute-entity-decimal'>;
}
declare module 'flow-parser/test/esprima/JSX/attribute-entity-hex.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/attribute-entity-hex'>;
}
declare module 'flow-parser/test/esprima/JSX/attribute-entity.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/attribute-entity'>;
}
declare module 'flow-parser/test/esprima/JSX/attribute-expression.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/attribute-expression'>;
}
declare module 'flow-parser/test/esprima/JSX/attribute-multi-entities.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/attribute-multi-entities'>;
}
declare module 'flow-parser/test/esprima/JSX/attribute-null-value.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/attribute-null-value'>;
}
declare module 'flow-parser/test/esprima/JSX/attribute-primary.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/attribute-primary'>;
}
declare module 'flow-parser/test/esprima/JSX/attribute-single-quoted-string.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/attribute-single-quoted-string'>;
}
declare module 'flow-parser/test/esprima/JSX/attribute-spread.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/attribute-spread'>;
}
declare module 'flow-parser/test/esprima/JSX/attribute-unknown-entity.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/attribute-unknown-entity'>;
}
declare module 'flow-parser/test/esprima/JSX/container-object-expression.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/container-object-expression'>;
}
declare module 'flow-parser/test/esprima/JSX/container-series.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/container-series'>;
}
declare module 'flow-parser/test/esprima/JSX/empty-child-comment.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/empty-child-comment'>;
}
declare module 'flow-parser/test/esprima/JSX/empty-expression-container.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/empty-expression-container'>;
}
declare module 'flow-parser/test/esprima/JSX/inside-group-expression.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/inside-group-expression'>;
}
declare module 'flow-parser/test/esprima/JSX/invalid-attribute-value-trail.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/invalid-attribute-value-trail'>;
}
declare module 'flow-parser/test/esprima/JSX/invalid-closing-trail.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/invalid-closing-trail'>;
}
declare module 'flow-parser/test/esprima/JSX/invalid-element.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/invalid-element'>;
}
declare module 'flow-parser/test/esprima/JSX/invalid-empty-attribute-expression.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/invalid-empty-attribute-expression'>;
}
declare module 'flow-parser/test/esprima/JSX/invalid-empty-selfclosing.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/invalid-empty-selfclosing'>;
}
declare module 'flow-parser/test/esprima/JSX/invalid-incomplete-namespace.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/invalid-incomplete-namespace'>;
}
declare module 'flow-parser/test/esprima/JSX/invalid-match-member.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/invalid-match-member'>;
}
declare module 'flow-parser/test/esprima/JSX/invalid-match-name-namespace.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/invalid-match-name-namespace'>;
}
declare module 'flow-parser/test/esprima/JSX/invalid-match-namespace-name.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/invalid-match-namespace-name'>;
}
declare module 'flow-parser/test/esprima/JSX/invalid-match-namespace.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/invalid-match-namespace'>;
}
declare module 'flow-parser/test/esprima/JSX/invalid-match.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/invalid-match'>;
}
declare module 'flow-parser/test/esprima/JSX/invalid-member-incomplete.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/invalid-member-incomplete'>;
}
declare module 'flow-parser/test/esprima/JSX/invalid-no-closing.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/invalid-no-closing'>;
}
declare module 'flow-parser/test/esprima/JSX/invalid-self-closing.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/invalid-self-closing'>;
}
declare module 'flow-parser/test/esprima/JSX/invalid-start-member.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/invalid-start-member'>;
}
declare module 'flow-parser/test/esprima/JSX/invalid-start-namespace.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/invalid-start-namespace'>;
}
declare module 'flow-parser/test/esprima/JSX/long-member-pair.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/long-member-pair'>;
}
declare module 'flow-parser/test/esprima/JSX/long-member.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/long-member'>;
}
declare module 'flow-parser/test/esprima/JSX/multi-attributes.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/multi-attributes'>;
}
declare module 'flow-parser/test/esprima/JSX/multiline-crlf-text.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/multiline-crlf-text'>;
}
declare module 'flow-parser/test/esprima/JSX/multiline-text.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/multiline-text'>;
}
declare module 'flow-parser/test/esprima/JSX/nested-elements.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/nested-elements'>;
}
declare module 'flow-parser/test/esprima/JSX/null-attribute-value.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/null-attribute-value'>;
}
declare module 'flow-parser/test/esprima/JSX/simple-deeply-nested-pair.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/simple-deeply-nested-pair'>;
}
declare module 'flow-parser/test/esprima/JSX/simple-expression-container.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/simple-expression-container'>;
}
declare module 'flow-parser/test/esprima/JSX/simple-member-pair.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/simple-member-pair'>;
}
declare module 'flow-parser/test/esprima/JSX/simple-member.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/simple-member'>;
}
declare module 'flow-parser/test/esprima/JSX/simple-namespace-pair.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/simple-namespace-pair'>;
}
declare module 'flow-parser/test/esprima/JSX/simple-namespace.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/simple-namespace'>;
}
declare module 'flow-parser/test/esprima/JSX/simple-nested-pair.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/simple-nested-pair'>;
}
declare module 'flow-parser/test/esprima/JSX/simple-pair.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/simple-pair'>;
}
declare module 'flow-parser/test/esprima/JSX/simple-selfclosing-linefeed.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/simple-selfclosing-linefeed'>;
}
declare module 'flow-parser/test/esprima/JSX/simple-selfclosing-whitespace.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/simple-selfclosing-whitespace'>;
}
declare module 'flow-parser/test/esprima/JSX/simple-selfclosing.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/simple-selfclosing'>;
}
declare module 'flow-parser/test/esprima/JSX/simple-text.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/JSX/simple-text'>;
}
declare module 'flow-parser/test/esprima/source-option/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/source-option/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/source-option/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/source-option/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/source-type-module/error-delete.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/source-type-module/error-delete'>;
}
declare module 'flow-parser/test/esprima/source-type-module/error-export-if.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/source-type-module/error-export-if'>;
}
declare module 'flow-parser/test/esprima/source-type-module/error-export-in-function.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/source-type-module/error-export-in-function'>;
}
declare module 'flow-parser/test/esprima/source-type-module/error-import-in-function.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/source-type-module/error-import-in-function'>;
}
declare module 'flow-parser/test/esprima/source-type-module/error-invalid-export-declaration.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/source-type-module/error-invalid-export-declaration'>;
}
declare module 'flow-parser/test/esprima/source-type-module/error-invalid-import-declaration.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/source-type-module/error-invalid-import-declaration'>;
}
declare module 'flow-parser/test/esprima/source-type-module/error-strict.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/source-type-module/error-strict'>;
}
declare module 'flow-parser/test/esprima/statement/block/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/block/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/statement/block/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/block/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/statement/block/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/block/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/statement/break/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/break/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/statement/break/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/break/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/statement/break/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/break/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/statement/break/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/break/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/statement/break/semicolon_newline.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/break/semicolon_newline'>;
}
declare module 'flow-parser/test/esprima/statement/continue/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/continue/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/statement/continue/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/continue/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/statement/continue/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/continue/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/statement/continue/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/continue/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/statement/continue/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/continue/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/statement/debugger/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/debugger/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/statement/empty/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/empty/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/statement/expression/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/expression/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/statement/expression/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/expression/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/statement/expression/migrated_0002.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/expression/migrated_0002.source'>;
}
declare module 'flow-parser/test/esprima/statement/expression/migrated_0003.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/expression/migrated_0003.source'>;
}
declare module 'flow-parser/test/esprima/statement/expression/migrated_0004.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/expression/migrated_0004.source'>;
}
declare module 'flow-parser/test/esprima/statement/expression/migrated_0005.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/expression/migrated_0005.source'>;
}
declare module 'flow-parser/test/esprima/statement/if/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/if/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/statement/if/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/if/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/statement/if/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/if/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/statement/if/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/if/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/statement/if/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/if/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/statement/if/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/if/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/statement/if/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/if/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/const_forin.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/const_forin'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/for-in-let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/for-in-let'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/for-let-let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/for-let-let'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/for-statement-with-seq.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/for-statement-with-seq'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/invalid-strict-for-in-let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/invalid-strict-for-in-let'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0007.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0007'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0008.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0008'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0009.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0009'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0010.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0010'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0011.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0011'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0012.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0012'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0013.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0013'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0014.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0014'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0015.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0015'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0016.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0016'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0017.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0017'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0018.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0018'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0019.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0019'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0020.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0020'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0021.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0021'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0022.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0022'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0023.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0023'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0024.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0024'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0025.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0025'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/migrated_0026.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/migrated_0026'>;
}
declare module 'flow-parser/test/esprima/statement/iteration/pattern-in-for-in.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/iteration/pattern-in-for-in'>;
}
declare module 'flow-parser/test/esprima/statement/labelled/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/labelled/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/statement/labelled/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/labelled/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/statement/labelled/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/labelled/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/statement/return/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/return/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/statement/return/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/return/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/statement/return/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/return/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/statement/return/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/return/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/statement/switch/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/switch/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/statement/switch/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/switch/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/statement/switch/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/switch/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/statement/throw/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/throw/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/statement/throw/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/throw/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/statement/throw/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/throw/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/statement/try/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/try/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/statement/try/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/try/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/statement/try/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/try/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/statement/try/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/try/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/statement/try/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/try/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/statement/try/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/try/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/statement/try/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/try/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/statement/try/strict_simple_catch.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/try/strict_simple_catch'>;
}
declare module 'flow-parser/test/esprima/statement/variable/complex-pattern-requires-init.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/variable/complex-pattern-requires-init'>;
}
declare module 'flow-parser/test/esprima/statement/variable/invalid_trailing_comma_1.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/variable/invalid_trailing_comma_1'>;
}
declare module 'flow-parser/test/esprima/statement/variable/invalid_trailing_comma_2.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/variable/invalid_trailing_comma_2'>;
}
declare module 'flow-parser/test/esprima/statement/variable/invalid_trailing_comma_3.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/variable/invalid_trailing_comma_3'>;
}
declare module 'flow-parser/test/esprima/statement/variable/invalid_trailing_comma_4.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/variable/invalid_trailing_comma_4'>;
}
declare module 'flow-parser/test/esprima/statement/variable/invalid_trailing_comma_5.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/variable/invalid_trailing_comma_5'>;
}
declare module 'flow-parser/test/esprima/statement/variable/invalid_trailing_comma_6.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/variable/invalid_trailing_comma_6'>;
}
declare module 'flow-parser/test/esprima/statement/variable/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/variable/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/statement/variable/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/variable/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/statement/variable/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/variable/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/statement/variable/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/variable/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/statement/variable/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/variable/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/statement/variable/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/variable/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/statement/variable/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/variable/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/statement/variable/var_let.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/variable/var_let'>;
}
declare module 'flow-parser/test/esprima/statement/with/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/with/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/statement/with/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/with/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/statement/with/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/statement/with/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/tokenize/leading_comment.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tokenize/leading_comment'>;
}
declare module 'flow-parser/test/esprima/tokenize/line_comment.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tokenize/line_comment'>;
}
declare module 'flow-parser/test/esprima/tokenize/line_terminators.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tokenize/line_terminators'>;
}
declare module 'flow-parser/test/esprima/tokenize/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tokenize/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/tokenize/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tokenize/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/tokenize/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tokenize/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/tokenize/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tokenize/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/tokenize/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tokenize/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/tokenize/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tokenize/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/tokenize/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tokenize/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/tokenize/migrated_0007.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tokenize/migrated_0007'>;
}
declare module 'flow-parser/test/esprima/tokenize/migrated_0008.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tokenize/migrated_0008'>;
}
declare module 'flow-parser/test/esprima/tokenize/migrated_0009.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tokenize/migrated_0009'>;
}
declare module 'flow-parser/test/esprima/tokenize/migrated_0010.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tokenize/migrated_0010'>;
}
declare module 'flow-parser/test/esprima/tokenize/migrated_0011.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tokenize/migrated_0011'>;
}
declare module 'flow-parser/test/esprima/tokenize/migrated_0012.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tokenize/migrated_0012'>;
}
declare module 'flow-parser/test/esprima/tokenize/migrated_0014.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tokenize/migrated_0014'>;
}
declare module 'flow-parser/test/esprima/tokenize/migrated_0015.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tokenize/migrated_0015'>;
}
declare module 'flow-parser/test/esprima/tokenize/migrated_0016.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tokenize/migrated_0016'>;
}
declare module 'flow-parser/test/esprima/tokenize/trailing_comment.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tokenize/trailing_comment'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/for-in-missing-parenthesis.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/for-in-missing-parenthesis'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/for-missing-parenthesis.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/for-missing-parenthesis'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/for-of-missing-parenthesis.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/for-of-missing-parenthesis'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/if-missing-parenthesis.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/if-missing-parenthesis'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/let_eval.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/let_eval'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0000.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0000'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0001.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0001'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0002.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0002'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0003.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0003'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0004.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0004'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0005.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0005'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0006.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0006'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0007.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0007'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0008.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0008'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0009.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0009'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0010.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0010'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0011.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0011'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0012.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0012'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0013.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0013'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0014.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0014'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0015.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0015'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0016.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0016'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0017.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0017'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0018.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0018'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0019.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0019'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0020.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0020'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0021.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0021'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0022.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0022'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0023.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0023'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0024.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0024'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0025.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0025'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0026.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0026'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0027.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0027'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0028.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0028'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0029.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0029'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0030.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0030'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0031.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0031'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0032.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0032'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0033.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0033'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0034.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0034'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0035.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0035'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0036.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0036'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0037.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0037'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0038.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0038'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0039.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0039'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0040.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0040'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0041.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0041'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0042.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0042'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0043.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0043'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0044.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0044'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0045.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0045'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0046.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0046'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0047.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0047'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0048.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0048'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0049.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0049'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0050.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0050.source'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0051.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0051'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/migrated_0052.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/migrated_0052'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/string_literal_escape_eight.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/string_literal_escape_eight'>;
}
declare module 'flow-parser/test/esprima/tolerant-parse/while-missing-parenthesis.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/tolerant-parse/while-missing-parenthesis'>;
}
declare module 'flow-parser/test/esprima/whitespace/migrated_0000.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/whitespace/migrated_0000.source'>;
}
declare module 'flow-parser/test/esprima/whitespace/migrated_0001.source.js' {
  declare module.exports: $Exports<'flow-parser/test/esprima/whitespace/migrated_0001.source'>;
}
declare module 'flow-parser/test/hardcoded_test_runner.js' {
  declare module.exports: $Exports<'flow-parser/test/hardcoded_test_runner'>;
}
declare module 'flow-parser/test/hardcoded_tests.js' {
  declare module.exports: $Exports<'flow-parser/test/hardcoded_tests'>;
}
declare module 'flow-parser/test/run_tests.js' {
  declare module.exports: $Exports<'flow-parser/test/run_tests'>;
}
declare module 'flow-parser/tools/generate_lexer_unicode_regex.js' {
  declare module.exports: $Exports<'flow-parser/tools/generate_lexer_unicode_regex'>;
}
declare module 'flow-parser/tools/inspect_ast.js' {
  declare module.exports: $Exports<'flow-parser/tools/inspect_ast'>;
}
declare module 'flow-parser/tools/js_test_files.js' {
  declare module.exports: $Exports<'flow-parser/tools/js_test_files'>;
}
declare module 'flow-parser/tools/process.js' {
  declare module.exports: $Exports<'flow-parser/tools/process'>;
}
